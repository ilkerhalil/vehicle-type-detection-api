# Vehicle Type Detection API - Environment Variables Template
# Copy this file to .env and update the values as needed

# Application Settings
APP_NAME="Vehicle Type Detection API"
APP_VERSION="3.0.0"
APP_DESCRIPTION="API for detecting vehicle types using AI model with Hexagonal Architecture"

# Server Configuration
HOST=0.0.0.0
PORT=8000
DEBUG=true
RELOAD=true

# API Configuration
API_V1_PREFIX="/api/v1"
API_V2_PREFIX="/api/v2"
API_V3_PREFIX="/api/v3"

# CORS Settings
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080", "http://127.0.0.1:3000"]
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=["GET", "POST", "PUT", "DELETE", "OPTIONS"]
CORS_ALLOW_HEADERS=["*"]

# Model Configuration
MODEL_PATH="models/best.pt"
ONNX_MODEL_PATH="models/best.onnx"
OPENVINO_MODEL_PATH="models/best_openvino_model"
LABELS_PATH="models/labels.txt"

# Detection Settings
CONFIDENCE_THRESHOLD=0.5
IOU_THRESHOLD=0.45
MAX_IMAGE_SIZE_MB=10
ALLOWED_EXTENSIONS=["jpg", "jpeg", "png", "bmp", "webp"]

# OpenVINO Settings
OPENVINO_DEVICE="CPU"  # Options: CPU, GPU, AUTO
OPENVINO_NUM_STREAMS=1
OPENVINO_NUM_THREADS=0  # 0 = auto

# PyTorch Settings
TORCH_DEVICE="auto"  # Options: auto, cpu, cuda
TORCH_NUM_THREADS=1

# ONNX Settings
ONNX_PROVIDERS=["CPUExecutionProvider"]  # Add "CUDAExecutionProvider" for GPU

# Logging Configuration
LOG_LEVEL="INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
LOG_FILE="logs/app.log"
LOG_MAX_SIZE=10485760  # 10MB
LOG_BACKUP_COUNT=5

# Performance Settings
MAX_WORKERS=4
THREAD_POOL_SIZE=10
PROCESS_POOL_SIZE=2

# Cache Settings
CACHE_ENABLED=true
CACHE_TTL=3600  # seconds
CACHE_MAX_SIZE=1000

# Security Settings
SECRET_KEY="your-secret-key-here-change-in-production"
ACCESS_TOKEN_EXPIRE_MINUTES=30
ALGORITHM="HS256"

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60  # seconds

# Database (if used)
DATABASE_URL="sqlite:///./app.db"
# DATABASE_URL="postgresql://user:password@localhost/dbname"
# DATABASE_URL="mysql://user:password@localhost/dbname"

# Redis (if used for caching)
REDIS_URL="redis://localhost:6379/0"
REDIS_PASSWORD=""

# Monitoring & Metrics
ENABLE_METRICS=true
METRICS_PATH="/metrics"
HEALTH_CHECK_PATH="/health"

# File Upload Settings
UPLOAD_FOLDER="uploads"
MAX_CONTENT_LENGTH=16777216  # 16MB
TEMP_FOLDER="temp"

# Docker Settings
DOCKER_IMAGE_NAME="vehicle-detection-api"
DOCKER_IMAGE_TAG="latest"

# Development Settings
DEVELOPMENT_MODE=true
AUTO_RELOAD=true
PROFILING_ENABLED=false

# Production Settings
PRODUCTION_MODE=false
WORKERS=4
WORKER_CLASS="uvicorn.workers.UvicornWorker"
WORKER_CONNECTIONS=1000
MAX_REQUESTS=1000
MAX_REQUESTS_JITTER=50

# External Services (if any)
# EXTERNAL_API_URL=""
# EXTERNAL_API_KEY=""
# EXTERNAL_API_TIMEOUT=30

# Backup Settings
BACKUP_ENABLED=false
BACKUP_INTERVAL=24  # hours
BACKUP_RETENTION=7  # days

# Testing Settings
TESTING=false
TEST_DATABASE_URL="sqlite:///./test.db"

# Environment
ENVIRONMENT="development"  # development, staging, production